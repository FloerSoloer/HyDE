## █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# see https://wiki.hyprland.org/configuring/keywords/ for more
# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description


#*  Variables 
# Default if commented out
# $mainMod = Super # super / meta / windows key
$launchMod = $mainMod shift
$killMod = $mainMod control shift
$focusMod = $mainMod
$ctrlMod = $mainMod control
# Assign apps
# $TERMINAL = kitty
# $EDITOR = code
# $EXPLORER = dolphin
# $BROWSER = firefox

$dgrp=System
$d=[$dgrp|Audio]
binddl  = , xf86audiomicmute,     $d un/mute microphone,  exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binddl  = , xf86audiomute,        $d toggle mute output,  exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddl  = , xf86audionext,        $d next media,          exec, playerctl next # media next
binddl  = , xf86audiopause,       $d pause media,         exec, playerctl play-pause # toggle between media play & pause
binddl  = , xf86audioplay,        $d play media,          exec, playerctl play-pause # toggle between media play & pause
binddl  = , xf86audioprev,        $d previous media,      exec, playerctl previous # media previous
binddle = , xf86audiolowervolume, $d decrease volume,     exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddle = , xf86audioraisevolume, $d increase volume,     exec, $scrPath/volumecontrol.sh -o i # increase volume

$d=[$dgrp|Input]
bindd   = $mainMod alt, home,  mouse auto areas,   exec, wl-kbptr -o modes=floating -o mode_floating.source=detect
bindd   = $mainMod alt, next,  mouse split areas,  exec, wl-kbptr -o modes=split
bindd   = $mainMod,     home,  mouse left click,   exec, wlrctl pointer click left
bindd   = $mainMod,     next,  mouse right click,  exec, wlrctl pointer click right
bindde  = $mainMod alt, prior, mouse scroll left,  exec, wlrctl pointer scroll  0  -10
bindde  = $mainMod alt, end,   mouse scroll right, exec, wlrctl pointer scroll  0   10
bindde  = $mainMod,     prior, mouse scroll down,  exec, wlrctl pointer scroll  10  0
bindde  = $mainMod,     end,   mouse scroll up,    exec, wlrctl pointer scroll -10  0
bindde  = $mainMod,     down,  mouse down,         exec, wlrctl pointer move  0   10
bindde  = $mainMod,     left,  mouse left,         exec, wlrctl pointer move -10  0
bindde  = $mainMod,     right, mouse right,        exec, wlrctl pointer move  10  0
bindde  = $mainMod,     up,    mouse up,           exec, wlrctl pointer move  0  -10
# binddl  = $mainMod, K, $d toggle keyboard layout , exec, $scrPath/keyboardswitch.sh # switch keyboard layout

$d=[$dgrp|Screen]
binddl  = ,    print,                 $d print monitor,       exec, $scrPath/screenshot.sh m # monitor screenshot capture
binddl  = alt, print,                 $d print all monitors,  exec, $scrPath/screenshot.sh p # all monitors screenshot capture
binddle = ,    xf86monbrightnessdown, $d decrease brightness, exec, $scrPath/brightnesscontrol.sh d # decrease brightness
binddle = ,    xf86monbrightnessup,   $d increase brightness, exec, $scrPath/brightnesscontrol.sh i # increase brightness

$dgrp=Launch
$d=[$dgrp|App]
bindd   = $launchMod alt, P,      $d freeze & snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
bindd   = $launchMod alt, grave,  $d dropdown terminal,      exec, hyde-shell pypr toggle console
bindd   = $launchMod,     B,      $d web browser,            exec, $BROWSER
bindd   = $launchMod,     C,      $d color picker,           exec, hyprpicker -an # Pick color (Hex) >> clipboard#
bindd   = $launchMod,     E,      $d file explorer,          exec, $EXPLORER
bindd   = $launchMod,     G,      $d open game launcher,     exec, $scrPath/gamelauncher.sh # run game launcher for steam & lutris
bindd   = $launchMod,     N,      $d text editor,            exec, $EDITOR
bindd   = $launchMod,     P,      $d snip screen,            exec, $scrPath/screenshot.sh s # partial screenshot capture
bindd   = $launchMod,     escape, $d system monitor,         exec, $scrPath/sysmonlaunch.sh
bindd   = $launchMod,     grave,  $d terminal emulator,      exec, $TERMINAL

$d=[$dgrp|Menu]
bindd   = $launchMod,     E,      $d file finder,          exec, pkill -x rofi || $scrPath/rofilaunch.sh f
bindd   = $launchMod,     L,      $d logout menu,          exec, $scrPath/logoutlaunch.sh
bindd   = $launchMod,     V,      $d clipboard manager,    exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
bindd   = $launchMod,     comma,  $d emoji  picker,        exec, pkill -x rofi || $scrPath/emoji-picker.sh # launch emoji picker
bindd   = $launchMod,     period, $d glyph picker,         exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
bindd   = $launchMod,     slash,  $d keybindings hint,     exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
bindd   = $launchMod,     space,  $d application finder,   exec, pkill -x rofi || $scrPath/rofilaunch.sh d
bindd   = $launchMod,     tab,    $d window switcher,      exec, pkill -x rofi || $scrPath/rofilaunch.sh w
bindd   = $mainMod,       V,      $d clipboard,            exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard

$dgrp=Kill
$d=[$dgrp]
bindd   = $killMod alt, B,      $d toggle waybar & reload config, exec, hyde-shell waybar --hide
bindd   = $killMod,     B,      $d toggle waybar,                 exec, killall waybar || waybar # toggle waybar without reloading, this is faster
bindd   = $killMod,     G,      $d toggle hypr effects,           exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
bindd   = $killMod,     L,      $d lock screen,                   exec, lockscreen.sh
bindd   = $killMod alt, L,      $d logout menu,                   exec, $scrPath/logoutlaunch.sh
bindd   = $killMod,     Q,      $d kill focused window,           forcekillactive
bindd   = $killMod,     delete, $d kill hyprland session,         exec, hyde-shell logout

$dgrp=Focus
$d=[$dgrp|Window]
bindd   = $focusMod alt, tab, $d previous window, cyclenext, prev
bindd   = $focusMod,     0,   $d window 1,        exec, $scrPath/focuswindow.sh 0
bindd   = $focusMod,     1,   $d window 1,        exec, $scrPath/focuswindow.sh 0
bindd   = $focusMod,     2,   $d window 2,        exec, $scrPath/focuswindow.sh 1
bindd   = $focusMod,     3,   $d window 3,        exec, $scrPath/focuswindow.sh 2
bindd   = $focusMod,     4,   $d window 4,        exec, $scrPath/focuswindow.sh 3
bindd   = $focusMod,     5,   $d window 5,        exec, $scrPath/focuswindow.sh 4
bindd   = $focusMod,     6,   $d window 6,        exec, $scrPath/focuswindow.sh 5
bindd   = $focusMod,     7,   $d window 7,        exec, $scrPath/focuswindow.sh 6
bindd   = $focusMod,     8,   $d window 8,        exec, $scrPath/focuswindow.sh 7
bindd   = $focusMod,     9,   $d window 9,        exec, $scrPath/focuswindow.sh 8
bindd   = $focusMod,     H,   $d focus left,      movefocus, l
bindd   = $focusMod,     J,   $d focus down,      movefocus, d
bindd   = $focusMod,     K,   $d focus up,        movefocus, u
bindd   = $focusMod,     L,   $d focus right,     movefocus, r
bindd   = $focusMod,     tab, $d Cycle focus,     cyclenext

$d=[$dgrp|Workspace]
bindd   = $focusMod alt, down,       $d next monitor,       focusmonitor, +1
bindd   = $focusMod alt, left,       $d previous monitor,   focusmonitor, -1
bindd   = $focusMod alt, right,      $d next monitor,       focusmonitor, +1
bindd   = $focusMod alt, up,         $d previous monitor,   focusmonitor, -1
bindd   = $focusMod,     f10,        $d workspace 1,        workspace, 1
bindd   = $focusMod,     f1,         $d workspace 1,        workspace, 1
bindd   = $focusMod,     f2,         $d workspace 2,        workspace, 2
bindd   = $focusMod,     f3,         $d workspace 3,        workspace, 3
bindd   = $focusMod,     f4,         $d workspace 4,        workspace, 4
bindd   = $focusMod,     f5,         $d workspace 5,        workspace, 5
bindd   = $focusMod,     f6,         $d workspace 6,        workspace, 6
bindd   = $focusMod,     f7,         $d workspace 7,        workspace, 7
bindd   = $focusMod,     f8,         $d workspace 8,        workspace, 8
bindd   = $focusMod,     f9,         $d workspace 9,        workspace, 9
bindd   = $focusMod,     mouse_down, $d next workspace,     workspace, m+1
bindd   = $focusMod,     mouse_up,   $d previous workspace, workspace, m-1

$dgrp=Control
$d=[$dgrp]
bindd   = $ctrlMod, J, $d toggle split,         togglesplit
bindd   = $ctrlMod, P, $d pin window,           exec, $scrPath/windowpin.sh
bindd   = $ctrlMod, Q, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd   = $ctrlMod, W, $d Toggle floating,      togglefloating

$d=[$dgrp|Move]
bindd   = $ctrlMod alt, f1,    $d move window to workspace 1 (silent), movetoworkspacesilent, 1
bindd   = $ctrlMod alt, f2,    $d move window to workspace 2 (silent), movetoworkspacesilent, 2
bindd   = $ctrlMod alt, f3,    $d move window to workspace 3 (silent), movetoworkspacesilent, 3
bindd   = $ctrlMod alt, f4,    $d move window to workspace 4 (silent), movetoworkspacesilent, 4
bindd   = $ctrlMod alt, f5,    $d move window to workspace 5 (silent), movetoworkspacesilent, 5
bindd   = $ctrlMod alt, f6,    $d move window to workspace 6 (silent), movetoworkspacesilent, 6
bindd   = $ctrlMod alt, f7,    $d move window to workspace 7 (silent), movetoworkspacesilent, 7
bindd   = $ctrlMod alt, f8,    $d move window to workspace 8 (silent), movetoworkspacesilent, 8
bindd   = $ctrlMod alt, f9,    $d move window to workspace 9 (silent), movetoworkspacesilent, 9
bindd   = $ctrlMod alt, down,  $d move workspace to next monitor,      movecurrentworkspacetomonitor, +1
bindd   = $ctrlMod alt, left,  $d move workspace to previous monitor,  movecurrentworkspacetomonitor, -1
bindd   = $ctrlMod alt, right, $d move workspace to next monitor,      movecurrentworkspacetomonitor, +1
bindd   = $ctrlMod alt, up,    $d move workspace to previous monitor,  movecurrentworkspacetomonitor, -1
bindd   = $ctrlMod,     f10,   $d move window to workspace 1,          movetoworkspace, 1
bindd   = $ctrlMod,     f1,    $d move window to workspace 1,          movetoworkspace, 1
bindd   = $ctrlMod,     f2,    $d move window to workspace 2,          movetoworkspace, 2
bindd   = $ctrlMod,     f3,    $d move window to workspace 3,          movetoworkspace, 3
bindd   = $ctrlMod,     f4,    $d move window to workspace 4,          movetoworkspace, 4
bindd   = $ctrlMod,     f5,    $d move window to workspace 5,          movetoworkspace, 5
bindd   = $ctrlMod,     f6,    $d move window to workspace 6,          movetoworkspace, 6
bindd   = $ctrlMod,     f7,    $d move window to workspace 7,          movetoworkspace, 7
bindd   = $ctrlMod,     f8,    $d move window to workspace 8,          movetoworkspace, 8
bindd   = $ctrlMod,     f9,    $d move window to workspace 9,          movetoworkspace, 9
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde  = $ctrlMod,     H,     $d move window left,                   exec, $moveactivewindow -20  0  || hyprctl dispatch movewindow l
bindde  = $ctrlMod,     L,     $d move window right,                  exec, $moveactivewindow  20  0  || hyprctl dispatch movewindow r
bindde  = $ctrlMod,     K,     $d move window up,                     exec, $moveactivewindow  0  -20 || hyprctl dispatch movewindow u
bindde  = $ctrlMod,     J,     $d move window down,                   exec, $moveactivewindow  0   20 || hyprctl dispatch movewindow d

$d=[$dgrp|Resize]
bindd   = $ctrlMod alt, enter,     $d fullscreen window,     fullscreen, 0
bindd   = $ctrlMod,     enter,     $d maximize window,       fullscreen, 1
bindde  = $ctrlMod alt, H,         $d resize window left,    resizeactive, -20 0
bindde  = $ctrlMod alt, J,         $d resize window down,    resizeactive, 0 20
bindde  = $ctrlMod alt, K,         $d resize window up,      resizeactive, 0 -20
bindde  = $ctrlMod alt, L,         $d resize window right,   resizeactive, 20 0
binddm  = $ctrlMod,     mouse:272, $d hold to move window,   movewindow
binddm  = $ctrlMod,     mouse:273, $d hold to resize window, resizewindow


# TODO Make a main rofi menu for these selectors
$rice=Theming & Wallpaper
$d=[$rice]
# bindd   = $mainMod alt, Right, $d next global wallpaper , exec, $scrPath/wallpaper.sh -Gn # next global wallpaper
# bindd   = $mainMod alt, Left, $d previous global wallpaper , exec, $scrPath/wallpaper.sh -Gp # previous global wallpaper
# bindd   = $mainMod Shift, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # launch wallpaper select menu
# bindd   = $mainMod alt, Up, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # next waybar mode
# bindd   = $mainMod alt, Down, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # previous waybar mode
# bindd   = $mainMod Shift, R, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
# bindd   = $mainMod Shift, T, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # launch theme select menu
# bindd   = $mainMod+Shift, Y, $d select animations, exec, pkill -x rofi || $scrPath/animations.sh --select # launch animations select menu
# bindd   = $mainMod+Shift, U, $d select hyprlock layout, exec, pkill -x rofi || $scrPath/hyprlock.sh --select # launch hyprlock layout select menu
# bindd   = $launchMod alt, A,      $d select rofi launcher, exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu

# Move/Switch to special workspace (scratchpad)
$dgrp=Special Workspace
$d=[$dgrp]
bindd   = $ctrlMod,     grave, $d move to scratchpad,          movetoworkspace, special
bindd   = $ctrlMod alt, grave, $d move to scratchpad (silent), movetoworkspacesilent, special
bindd   = $focusMod,    grave, $d toggle scratchpad,           togglespecialworkspace

$d=#! unset the group name
